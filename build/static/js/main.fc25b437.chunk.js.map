{"version":3,"sources":["components/serverCommunication.js","App.js","index.js"],"names":["personsUrl","axios","get","then","response","data","Person","post","id","delete","updatedPerson","put","Filter","search","onChange","value","Notification","message","error","className","PersonForm","props","onSubmit","handleSubmit","name","nameChange","number","numberChange","type","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","setSearch","notification","setNotification","setError","getData","serverCommunication","useEffect","showNotification","setTimeout","filteredPersons","filter","person","toLowerCase","includes","event","target","preventDefault","newPerson","map","find","alert","window","confirm","changedPerson","p","catch","e","concat","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fc25b437.chunk.js","sourcesContent":["import axios from 'axios';\nconst personsUrl = 'http://localhost:3001/api/persons';\n\nconst getPersons = () => {\n    let request = axios.get(personsUrl)\n    return request.then(response => response.data)\n}\n\nconst createPerson = (Person) => { \n    let request = axios.post(personsUrl, Person);\n    return request.then(response => response.data)\n}\n\nconst removePerson = (id) => {\n    let request = axios.delete(`${personsUrl}/${id}`);\n    return request.then(response => response.data)\n}\n\nconst updatePerson = (id, updatedPerson) => {\n    let request = axios.put(`${personsUrl}/${id}`, updatedPerson)\n    return request.then(response => response.data) //this appears to let me catch error in App.js\n}\nexport default {getPersons, createPerson, removePerson, updatePerson}\n","import React, { useState, useEffect } from 'react'\n//import axios from 'axios'\nimport serverCommunication from './components/serverCommunication'; \n\nconst Filter = ( {search, onChange}) => {\n\n  return(\n    <form>\n        Show only names containing <input value={search} onChange={onChange}/>\n    </form>\n  )\n\n\n}\n\nconst Notification = ( {message, error=null} ) => {\n  if (message === null) {return null}\n  if (error){\n    return(\n      <div className='error'>\n        {error}\n      </div>\n    )\n  }\n  return (\n    <div className='notification'>\n      {message}\n    </div>\n  )\n\n}\n\nconst PersonForm = (props) => {\n  return (\n   <form onSubmit={props.handleSubmit}>\n    <p>name: <input value={props.name} onChange={props.nameChange}></input></p>\n    <p>number:<input value={props.number} onChange={props.numberChange}></input></p>\n    <button type=\"submit\">add</button>\n    </form>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [ search, setSearch] = useState('')\n  const [notification, setNotification] = useState(null)\n  const [error, setError] = useState(null)\n\n  const getData = () => {\n    serverCommunication.getPersons()\n    .then(data => {setPersons(data)\n    })\n  }\n  useEffect(() => {\n    getData()\n  }, [])\n\n  const changeName = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const changeNumber = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const changeSearch = (event) => {\n    setSearch(event.target.value)\n  }\n\n  const showNotification = (message) => {\n    setNotification(message)\n          setTimeout( () => {\n            setNotification(null)\n          }, 5000)\n  }\n\n  const filteredPersons = search === ''\n    ? persons \n    : persons.filter(person => person.name.toLowerCase().includes(search.toLowerCase()))\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (newName === ''){ return}\n    const newPerson = {\n      name: newName,\n      number: newNumber,\n    }\n\n    if (persons.map(person => person.name).includes(newName)){ \n      const person = persons.find(person => person.name === newName)\n      if (newNumber === person.number){\n        alert(`${newName} is already in the phonebook with that number.`)\n      } else { //person exists but number is different\n        const result = window.confirm(`${person.name} is already in the phonebook, replace the old number with a new one?`)\n        if (result){ \n          const changedPerson = {...person, number: newNumber}\n          serverCommunication.updatePerson(person.id, changedPerson)\n          .then(response => {setPersons(persons.map(p => p.id !== person.id ? p : response))})\n          .catch(e => {\n            setError(`Information of ${person.name} has already been removed from the server.`)\n            setTimeout(() => {\n            setError(null);\n            }, 5000);\n\n          })\n          if (error === null){\n            showNotification(`Updated ${person.name}'s number.`)\n          }\n          getData();\n        }\n      }\n  }\n    else {  \n      serverCommunication.createPerson(newPerson)\n      .then(data => setPersons(persons.concat(data)))\n      showNotification(`Added ${newName}`)\n      setNewName('');\n      setNewNumber('');\n}}\nconst handleClick = (Person) => {\n  const result = window.confirm(`Are you sure you want to delete ${Person.name} ?`);\n  if (result) {\n    serverCommunication.removePerson(Person.id)\n    .catch(e => {\n      setError(`Information of ${Person.name} has already been removed from the server.`)\n      setTimeout(() => {\n        setError(null);\n       }, 5000);\n    });\n    showNotification(`Deleted ${Person.name}`)\n    getData()}\n}\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification} error={error}/>\n      <Filter search={search} onChange={changeSearch}/>\n      <h2>Add a new: </h2>\n      <PersonForm handleSubmit ={handleSubmit} name={newName} nameChange={changeName} \n        number = {newNumber} numberChange={changeNumber}/>\n      <h2>Numbers</h2>\n      <ul> \n        {filteredPersons.map(person => <li key={person.id}>{(person.name)} {person.number} {\" \"}\n          <button onClick={ () => handleClick(person)}> delete </button></li>)}\n      </ul>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}